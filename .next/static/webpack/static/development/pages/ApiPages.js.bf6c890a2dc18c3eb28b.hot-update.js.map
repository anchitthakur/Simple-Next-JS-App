{"version":3,"file":"static/webpack/static\\development\\pages\\ApiPages.js.bf6c890a2dc18c3eb28b.hot-update.js","sources":["webpack:///./pages/ApiPages.js"],"sourcesContent":["import Head from \"next/head\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Api from \"../components/Api\";\r\nimport Layout from \"../components/Layout\";\r\nimport Search from \"../components/Search\";\r\nimport { changePage } from \"../components/actions/pageAction\";\r\n\r\nconst ApiPages = props => {\r\n  console.log(props);\r\n  const [data, setData] = useState(props.data);\r\n  const test = useRef(0);\r\n  const mounted = useRef(0);\r\n  useEffect(() => {\r\n    test.current = 1;\r\n  }, [props.search]);\r\n\r\n  useEffect(() => {\r\n    if (!props.isFetched || mounted.current==1) {\r\n      ApiPages.getInitialProps({\r\n        page: test.current ? 1 : props.page,\r\n        search: props.search,\r\n        isUser: 1\r\n      }).then(json => {\r\n        console.log(test.current)\r\n        if (test.current == 0) {\r\n          var temp = jsonConcat(data, json.data);\r\n          setData(temp);\r\n        } else {\r\n          //changePage(1)\r\n          test.current = 0;\r\n          setData(json.data);\r\n          \r\n        }\r\n      });\r\n   }else mounted.current=1\r\n  }, [props.page, props.search]);\r\n\r\n  const fetchMoreData = () => {\r\n    console.log(\"called\");\r\n    props.changePage(props.page + 1);\r\n  };\r\n\r\n  function jsonConcat(o1, o2) {\r\n    var t = [];\r\n    for (var key in o1) {\r\n      t[parseInt(key)] = o1[key];\r\n    }\r\n    for (var key in o2) {\r\n      t[parseInt(key) + parseInt(data.length)] = o2[key];\r\n    }\r\n\r\n    return t;\r\n  }\r\n  return (\r\n    <>\r\n      <Head>\r\n        <meta keywords=\"API\" />\r\n      </Head>\r\n      <Layout>\r\n        <h2>NEWS</h2>\r\n        <br />\r\n        <Search />\r\n        <br />\r\n        <InfiniteScroll\r\n          dataLength={data.length}\r\n          next={fetchMoreData}\r\n          hasMore={data.length === 100 ? false : true}\r\n          loader={<h4>Loading...</h4>}\r\n          endMessage={\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b>Yay! You have seen it all</b>\r\n            </p>\r\n          }\r\n        >\r\n          <Api data={data} />\r\n        </InfiniteScroll>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nApiPages.getInitialProps = async function({\r\n  search = \"tech\",\r\n  page = 1,\r\n  isUser = 0\r\n}) {\r\n  if (isUser == 0 && !(typeof window === \"undefined\"))\r\n    return { data: [], isFetched: false };\r\n\r\n  var url =\r\n    \"https://newsapi.org/v2/everything?\" +\r\n    \"q=\" +\r\n    search +\r\n    \"&\" +\r\n    \"sortBy=publishedAt&\" +\r\n    \"page=\" +\r\n    page +\r\n    \"&\" +\r\n    \"pageSize=10&language=en&\" +\r\n    \"apiKey=3b214239993247f18926b8fab6ee014f\";\r\n  const res = await fetch(url);\r\n  const json = await res.json();\r\n  return { data: json.articles, isFetched: true };\r\n};\r\nconst mapStateToProps = state => ({\r\n  page: state.page.page,\r\n  search: state.page.search\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { changePage }\r\n)(ApiPages);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAMA;AAAA;AAAA;AACA;AAPA;AAQA;AARA;AAAA;AACA;AADA;AAmBA;AAnBA;AAAA;AACA;AADA;AAoBA;AApBA;AAqBA;AAAA;AAAA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAsBA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAEA;AAAA;;;;A","sourceRoot":""}