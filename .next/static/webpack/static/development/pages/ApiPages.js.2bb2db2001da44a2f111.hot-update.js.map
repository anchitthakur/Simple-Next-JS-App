{"version":3,"file":"static/webpack/static\\development\\pages\\ApiPages.js.2bb2db2001da44a2f111.hot-update.js","sources":["webpack:///./components/Api.js","webpack:///./components/Search.js","webpack:///./components/actions/pageAction.js","webpack:///./components/actions/types.js","webpack:///./components/reducers/pageReducer.js","webpack:///./pages/ApiPages.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\nimport NewsItem from '../components/NewsItem';\r\nimport { fetchPosts } from '../components/actions/postActions'\r\n\r\nfunction Api(props) {\r\n    useEffect(() => {\r\n        //if (Object.keys(props.posts).length == 0)\r\n        props.fetchPosts({ page: props.page, search: props.search })\r\n    }, [props.page,props.search])\r\n    let arr = [];\r\n\r\n    if (props.posts.status === 'ok')\r\n        for (let i of props.posts.articles) {\r\n            arr.push(\r\n                <NewsItem key={i.url} props={i} />\r\n            )\r\n        }\r\n    return (\r\n        <>\r\n            {arr}\r\n        </>\r\n    )\r\n}\r\n\r\nApi.propTypes = {\r\n    fetchPosts: Proptypes.func.isRequired,\r\n    posts: Proptypes.object.isRequired,\r\n    search: propTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts.items,\r\n    page: state.page.page,\r\n    search: state.page.search\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(Api)","import { useState } from 'react'\r\n\r\n\r\nconst Search = (props) => {\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        props.changePage(search)\r\n    }\r\n    return (\r\n        <form className=\"form-inline my-2 my-lg-0\" onSubmit = {handleSubmit}>\r\n            <input className=\"form-control mr-sm-2\" type=\"text\" placeholder={search} onChange={inputChange} />\r\n            <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nSearch.propTypes = {\r\n    changePage: propTypes.func.isRequired,\r\n    search: propTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    search: state.page.search\r\n})\r\n\r\nexport default connect(mapStateToProps, { changePage })(Search)\r\n","import { CHANGE_PAGE, CHANGE_SEARCH } from './types'\r\n\r\nexport const changePage = (p) => dispatch => {\r\n    dispatch({\r\n        type: CHANGE_PAGE,\r\n        payload: p\r\n    })\r\n}\r\n\r\nexport const changeSearch = (s) => dispatch => {\r\n    dispatch({\r\n        type: CHANGE_SEARCH,\r\n        payload: s\r\n    })\r\n}","export const FETCH_POSTS = 'FETCH_POSTS'\r\nexport const INCREASE_PAGES = 'INCREASE_PAGES'\r\nexport const DECREASE_PAGES = 'DECREASE_PAGES'\r\nexport const CHANGE_PAGE = 'CHANGE_PAGE'\r\nexport const CHANGE_SEARCH = 'CHANGE_SEARCH'","import { CHANGE_PAGE, CHANGE_SEARCH } from '../actions/types'\r\n\r\nconst initialState = {\r\n    page: 1,\r\n    search: 'tech'\r\n}\r\n\r\nexport default function(state = initialState,action){\r\n    switch(action.type){\r\n        case CHANGE_PAGE:\r\n            return{\r\n                ...state,\r\n                page:action.payload\r\n            }\r\n        case CHANGE_SEARCH:\r\n            return{\r\n                ...state,\r\n                search:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { useState } from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport Api from '../components/Api';\r\nimport Layout from '../components/Layout';\r\nimport Search from '../components/Search';\r\nimport Pagination from '../components/Pagination'\r\nimport store from \"../components/store\";\r\nimport Head from 'next/head'\r\n\r\nconst ApiPages = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Head>\r\n                <meta keywords = \"API\" />\r\n            </Head>\r\n            <Layout>\r\n                <h2>NEWS</h2>\r\n                <br />\r\n                <Search/>\r\n                <br />\r\n                <Pagination/>\r\n                <Api/>\r\n                <Pagination/>\r\n            </Layout>\r\n        </Provider>)\r\n}\r\n\r\nexport default ApiPages;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACtCA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AAAA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACJA;AAEA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAZA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}