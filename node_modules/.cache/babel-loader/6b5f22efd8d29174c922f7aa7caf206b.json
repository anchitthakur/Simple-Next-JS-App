{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport NewsItem from '../components/NewsItem';\nimport Fetcher from './Fetcher';\nimport React, { useEffect, useState } from 'react';\n\nfunction Api(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      arrv = _useState2[0],\n      setArrv = _useState2[1];\n\n  var arr = [];\n  var data = Fetcher(props.page);\n  useEffect(function () {\n    data.then(function (a) {\n      console.log(props.page);\n      console.log(a);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(a.articles), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var i = _step.value;\n          arr.push(React.createElement(NewsItem, {\n            key: i.url,\n            props: i\n          }));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      setArrv(arr);\n    });\n  }, [props.page]);\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", null, \"NEWS\"), arrv);\n}\n\nexport default Api;","map":null,"metadata":{},"sourceType":"module"}