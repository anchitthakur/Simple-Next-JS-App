{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nvar _jsxFileName = \"C:\\\\Users\\\\im\\\\Desktop\\\\main\\\\components\\\\Api.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport NewsItem from '../components/NewsItem';\nimport { fetchPosts } from '../components/actions/postActions';\n\nfunction Api(props) {\n  console.log(props);\n  useEffect(function () {\n    if (!props.data) props.fetchPosts({\n      page: props.page,\n      search: props.search\n    });\n  }, [props.page, props.search]);\n  var arr = [];\n\n  if (props.data.status === 'ok') {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _getIterator(props.data.articles), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var i = _step.value;\n        arr.push(React.createElement(NewsItem, {\n          key: i.url,\n          article: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, arr);\n}\n\nApi.Proptypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.object.isRequired,\n  search: Proptypes.string.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts.items,\n    page: state.page.page,\n    search: state.page.search\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(Api);","map":{"version":3,"sources":["C:\\Users\\im\\Desktop\\main\\components\\Api.js"],"names":["React","useEffect","connect","Proptypes","NewsItem","fetchPosts","Api","props","console","log","data","page","search","arr","status","articles","i","push","url","func","isRequired","posts","object","string","mapStateToProps","state","items"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACM,KAAK,CAACG,IAAX,EACIH,KAAK,CAACF,UAAN,CAAiB;AAAEM,MAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAd;AAAoBC,MAAAA,MAAM,EAAEL,KAAK,CAACK;AAAlC,KAAjB;AACP,GAHQ,EAGN,CAACL,KAAK,CAACI,IAAP,EAAaJ,KAAK,CAACK,MAAnB,CAHM,CAAT;AAIA,MAAIC,GAAG,GAAG,EAAV;;AAEA,MAAIN,KAAK,CAACG,IAAN,CAAWI,MAAX,KAAsB,IAA1B;AAAA;AAAA;AAAA;;AAAA;AACI,wCAAcP,KAAK,CAACG,IAAN,CAAWK,QAAzB,4GAAmC;AAAA,YAA1BC,CAA0B;AAC/BH,QAAAA,GAAG,CAACI,IAAJ,CACI,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAED,CAAC,CAACE,GAAjB;AAAsB,UAAA,OAAO,EAAEF,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,SACI,0CACKH,GADL,CADJ;AAKH;;AAEDP,GAAG,CAACH,SAAJ,GAAgB;AACZE,EAAAA,UAAU,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UADf;AAEZC,EAAAA,KAAK,EAAElB,SAAS,CAACmB,MAAV,CAAiBF,UAFZ;AAGZR,EAAAA,MAAM,EAAET,SAAS,CAACoB,MAAV,CAAiBH;AAHb,CAAhB;;AAMA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BJ,IAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYK,KADW;AAE9Bf,IAAAA,IAAI,EAAEc,KAAK,CAACd,IAAN,CAAWA,IAFa;AAG9BC,IAAAA,MAAM,EAAEa,KAAK,CAACd,IAAN,CAAWC;AAHW,GAAL;AAAA,CAA7B;;AAMA,eAAeV,OAAO,CAACsB,eAAD,EAAkB;AAAEnB,EAAAA,UAAU,EAAVA;AAAF,CAAlB,CAAP,CAAyCC,GAAzC,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\nimport NewsItem from '../components/NewsItem';\r\nimport { fetchPosts } from '../components/actions/postActions'\r\n\r\nfunction Api(props) {\r\n    console.log(props)\r\n    useEffect(() => {\r\n        if (!props.data)\r\n            props.fetchPosts({ page: props.page, search: props.search })\r\n    }, [props.page, props.search])\r\n    let arr = [];\r\n\r\n    if (props.data.status === 'ok')\r\n        for (let i of props.data.articles) {\r\n            arr.push(\r\n                <NewsItem key={i.url} article={i} />\r\n            )\r\n        }\r\n    return (\r\n        <>\r\n            {arr}\r\n        </>\r\n    )\r\n}\r\n\r\nApi.Proptypes = {\r\n    fetchPosts: Proptypes.func.isRequired,\r\n    posts: Proptypes.object.isRequired,\r\n    search: Proptypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts.items,\r\n    page: state.page.page,\r\n    search: state.page.search\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(Api)"]},"metadata":{},"sourceType":"module"}