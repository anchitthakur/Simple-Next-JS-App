{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nvar _jsxFileName = \"C:\\\\Users\\\\im\\\\Desktop\\\\New folder\\\\components\\\\Api.js\";\nimport React, { useLayoutEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport NewsItem from '../components/NewsItem';\nimport { fetchPosts } from '../components/actions/postActions';\n\nfunction Api(props) {\n  useLayoutEffect(function () {\n    props.fetchPosts({\n      page: props.page,\n      search: props.search\n    });\n  }, []);\n  console.log(props.page);\n  console.log(props.search);\n  var arr = [];\n  console.log(props.posts);\n\n  if (props.posts.status === 'ok') {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _getIterator(props.posts.articles), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var i = _step.value;\n        arr.push(React.createElement(NewsItem, {\n          key: i.url,\n          props: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, arr);\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(Api);","map":{"version":3,"sources":["C:\\Users\\im\\Desktop\\New folder\\components\\Api.js"],"names":["React","useLayoutEffect","useState","connect","NewsItem","fetchPosts","Api","props","page","search","console","log","arr","posts","status","articles","i","push","url","mapStateToProps","state","items"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAChBN,EAAAA,eAAe,CAAC,YAAM;AAClBM,IAAAA,KAAK,CAACF,UAAN,CAAiB;AAAEG,MAAAA,IAAI,EAAED,KAAK,CAACC,IAAd;AAAoBC,MAAAA,MAAM,EAAEF,KAAK,CAACE;AAAlC,KAAjB;AACH,GAFc,EAEZ,EAFY,CAAf;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,IAAlB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACE,MAAlB;AACA,MAAIG,GAAG,GAAG,EAAV;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACM,KAAlB;;AAEA,MAAIN,KAAK,CAACM,KAAN,CAAYC,MAAZ,KAAuB,IAA3B;AAAA;AAAA;AAAA;;AAAA;AACA,wCAAcP,KAAK,CAACM,KAAN,CAAYE,QAA1B,4GAAoC;AAAA,YAA3BC,CAA2B;AAChCJ,QAAAA,GAAG,CAACK,IAAJ,CACI,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAED,CAAC,CAACE,GAAjB;AAAsB,UAAA,KAAK,EAAEF,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,SACI,0CACKJ,GADL,CADJ;AAKH;;AAED,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BP,IAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYQ;AADW,GAAL;AAAA,CAA7B;;AAIA,eAAelB,OAAO,CAACgB,eAAD,EAAkB;AAAEd,EAAAA,UAAU,EAAVA;AAAF,CAAlB,CAAP,CAAyCC,GAAzC,CAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport NewsItem from '../components/NewsItem';\r\nimport { fetchPosts } from '../components/actions/postActions'\r\n\r\nfunction Api(props) {\r\n    useLayoutEffect(() => {\r\n        props.fetchPosts({ page: props.page, search: props.search })\r\n    }, [])\r\n    console.log(props.page)\r\n    console.log(props.search)\r\n    let arr = [];\r\n    console.log(props.posts)\r\n\r\n    if (props.posts.status === 'ok')\r\n    for (let i of props.posts.articles) {\r\n        arr.push(\r\n            <NewsItem key={i.url} props={i} />\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {arr}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts.items\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(Api)"]},"metadata":{},"sourceType":"module"}