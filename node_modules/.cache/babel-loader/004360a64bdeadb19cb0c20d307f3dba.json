{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport { changeSearch } from '../components/actions/pageAction';\n\nvar Search = function Search(props) {\n  var _useState = useState('tech'),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var inputChange = function inputChange(e) {\n    setSearch(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    props.changeSearch(search);\n  };\n\n  return React.createElement(\"form\", {\n    className: \"form-inline my-2 my-lg-0\",\n    onSubmit: handleSubmit\n  }, React.createElement(\"input\", {\n    className: \"form-control mr-sm-2\",\n    type: \"text\",\n    placeholder: props.search,\n    onChange: inputChange\n  }), React.createElement(\"button\", {\n    className: \"btn btn-secondary my-2 my-sm-0\",\n    type: \"submit\"\n  }, \"Search\"));\n};\n\nSearch.Proptypes = {\n  changeSearch: Proptypes.func.isRequired,\n  search: Proptypes.string.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    search: state.page.search\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeSearch: changeSearch\n})(Search);","map":null,"metadata":{},"sourceType":"module"}