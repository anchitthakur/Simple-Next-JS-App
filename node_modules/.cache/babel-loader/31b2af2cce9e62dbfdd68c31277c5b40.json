{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/anchit/WebstormProjects/Simple-next-js-app/pages/_app.js\";\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport withReduxStore from '../lib/with-redux-store';\nimport { Provider } from 'react-redux';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.register(\"/servic.js\").catch(function (err) {\n          return console.error(\"Service worker registration failed\", err);\n        });\n      } else {\n        console.log(\"Service worker not supported\");\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          reduxStore = _this$props.reduxStore;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Provider, {\n        store: reduxStore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withReduxStore(MyApp);","map":{"version":3,"sources":["/home/anchit/WebstormProjects/Simple-next-js-app/pages/_app.js"],"names":["App","Container","React","withReduxStore","Provider","MyApp","navigator","serviceWorker","register","catch","err","console","error","log","props","Component","pageProps","reduxStore"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,IAAaC,SAAb,QAA6B,UAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAAQC,QAAR,QAAuB,aAAvB;;IAEMC,K;;;;;;;;;;;;;;;;;;wEACkB,YAAM;AACtB,UAAI,mBAAmBC,SAAvB,EAAkC;AAC9BA,QAAAA,SAAS,CAACC,aAAV,CAAwBC,QAAxB,CAAiC,YAAjC,EACKC,KADL,CACW,UAAAC,GAAG;AAAA,iBAAIC,OAAO,CAACC,KAAR,CAAc,oCAAd,EAAoDF,GAApD,CAAJ;AAAA,SADd;AAEH,OAHD,MAGO;AACHC,QAAAA,OAAO,CAACE,GAAR,CAAY,8BAAZ;AACH;AACJ,K;;;;;;;6BACQ;AAAA,wBACsC,KAAKC,KAD3C;AAAA,UACEC,SADF,eACEA,SADF;AAAA,UACaC,SADb,eACaA,SADb;AAAA,UACwBC,UADxB,eACwBA,UADxB;AAEL,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ,CADJ;AAOH;;;;EAlBehB,G;;AAqBpB,eAAeG,cAAc,CAACE,KAAD,CAA7B","sourcesContent":["import App, {Container} from 'next/app'\nimport React from 'react'\nimport withReduxStore from '../lib/with-redux-store'\nimport {Provider} from 'react-redux'\n\nclass MyApp extends App {\n    componentDidMount = () => {\n        if (\"serviceWorker\" in navigator) {\n            navigator.serviceWorker.register(\"/servic.js\")\n                .catch(err => console.error(\"Service worker registration failed\", err))\n        } else {\n            console.log(\"Service worker not supported\");\n        }\n    }\n    render() {\n        const {Component, pageProps, reduxStore} = this.props;\n        return (\n            <Container>\n                <Provider store={reduxStore}>\n                    <Component {...pageProps} />\n                </Provider>\n            </Container>\n        )\n    }\n}\n\nexport default withReduxStore(MyApp)"]},"metadata":{},"sourceType":"module"}