{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\im\\\\Desktop\\\\New folder\\\\components\\\\Api.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport NewsItem from '../components/NewsItem';\nimport Fetcher from './Fetcher';\nimport { fetchPosts } from '../components/actions/postActions';\n\nfunction Api(props) {\n  console.log(props.page);\n  console.log(props.search);\n  var arr = [];\n\n  var _useState = useState(arr),\n      _useState2 = _slicedToArray(_useState, 2),\n      arrv = _useState2[0],\n      setArrv = _useState2[1];\n\n  useEffect(function () {\n    console.log(props.posts); //let data = Fetcher(props.page, props.search);\n\n    props.fetchPosts({\n      page: props.page,\n      search: props.search\n    });\n    /*data.then(function (a) {\r\n        for (let i of a.articles) {\r\n            arr.push(\r\n                <NewsItem key={i.url} props={i} />\r\n            )\r\n        }\r\n        setArrv(arr)\r\n    })*/\n\n    if (props.posts.status === 'ok') {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(props.posts.articles), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var i = _step.value;\n          arr.push(React.createElement(NewsItem, {\n            key: i.url,\n            props: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    setArrv(arr);\n    console.log(arr);\n  });\n  return React.createElement(React.Fragment, null, arrv);\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(Api);","map":{"version":3,"sources":["C:\\Users\\im\\Desktop\\New folder\\components\\Api.js"],"names":["React","useEffect","useState","connect","NewsItem","Fetcher","fetchPosts","Api","props","console","log","page","search","arr","arrv","setArrv","posts","status","articles","i","push","url","mapStateToProps","state","items"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACI,MAAlB;AACA,MAAIC,GAAG,GAAG,EAAV;;AAHgB,kBAIQX,QAAQ,CAACW,GAAD,CAJhB;AAAA;AAAA,MAITC,IAJS;AAAA,MAIHC,OAJG;;AAMhBd,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACQ,KAAlB,EADY,CAEZ;;AACAR,IAAAA,KAAK,CAACF,UAAN,CAAiB;AAAEK,MAAAA,IAAI,EAAEH,KAAK,CAACG,IAAd;AAAoBC,MAAAA,MAAM,EAAEJ,KAAK,CAACI;AAAlC,KAAjB;AACA;;;;;;;;;AAQA,QAAIJ,KAAK,CAACQ,KAAN,CAAYC,MAAZ,KAAuB,IAA3B;AAAA;AAAA;AAAA;;AAAA;AACI,0CAAcT,KAAK,CAACQ,KAAN,CAAYE,QAA1B,4GAAoC;AAAA,cAA3BC,CAA2B;AAChCN,UAAAA,GAAG,CAACO,IAAJ,CACI,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAED,CAAC,CAACE,GAAjB;AAAsB,YAAA,KAAK,EAAEF,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAJ,IAAAA,OAAO,CAACF,GAAD,CAAP;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,GApBQ,CAAT;AAsBA,SACI,0CACKC,IADL,CADJ;AAKH;;AAED,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BP,IAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYQ;AADW,GAAL;AAAA,CAA7B;;AAIA,eAAerB,OAAO,CAACmB,eAAD,EAAkB;AAAEhB,EAAAA,UAAU,EAAVA;AAAF,CAAlB,CAAP,CAAyCC,GAAzC,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport NewsItem from '../components/NewsItem';\r\nimport Fetcher from './Fetcher'\r\nimport { fetchPosts } from '../components/actions/postActions'\r\n\r\nfunction Api(props) {\r\n    console.log(props.page)\r\n    console.log(props.search)\r\n    let arr = [];\r\n    const [arrv, setArrv] = useState(arr)\r\n\r\n    useEffect(() => {\r\n        console.log(props.posts)\r\n        //let data = Fetcher(props.page, props.search);\r\n        props.fetchPosts({ page: props.page, search: props.search })\r\n        /*data.then(function (a) {\r\n            for (let i of a.articles) {\r\n                arr.push(\r\n                    <NewsItem key={i.url} props={i} />\r\n                )\r\n            }\r\n            setArrv(arr)\r\n        })*/\r\n        if (props.posts.status === 'ok')\r\n            for (let i of props.posts.articles) {\r\n                arr.push(\r\n                    <NewsItem key={i.url} props={i} />\r\n                )\r\n            }\r\n        setArrv(arr)\r\n        console.log(arr)\r\n    },)\r\n\r\n    return (\r\n        <>\r\n            {arrv}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts.items\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(Api)"]},"metadata":{},"sourceType":"module"}