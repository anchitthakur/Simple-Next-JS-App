{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\im\\\\Desktop\\\\New folder\\\\components\\\\Api.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport NewsItem from '../components/NewsItem';\nimport Fetcher from './Fetcher';\nimport { fetchPosts } from '../components/actions/postActions';\n\nfunction Api(props) {\n  console.log(props.page);\n  console.log(props.search);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      arrv = _useState2[0],\n      setArrv = _useState2[1];\n\n  var arr = [];\n  useEffect(function () {\n    //let data = Fetcher(props.page, props.search);\n    props.fetchPosts({\n      page: props.page,\n      search: props.search\n    });\n    /*data.then(function (a) {\r\n        for (let i of a.articles) {\r\n            arr.push(\r\n                <NewsItem key={i.url} props={i} />\r\n            )\r\n        }\r\n        setArrv(arr)\r\n    })*/\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _getIterator(props.posts.articles), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var i = _step.value;\n        arr.push(React.createElement(NewsItem, {\n          key: i.url,\n          props: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }, [props.page, props.search]);\n  return React.createElement(React.Fragment, null, arrv);\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(Api);","map":{"version":3,"sources":["C:\\Users\\im\\Desktop\\New folder\\components\\Api.js"],"names":["React","useEffect","useState","connect","NewsItem","Fetcher","fetchPosts","Api","props","console","log","page","search","arrv","setArrv","arr","posts","articles","i","push","url","mapStateToProps","state","items"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,UAAR,QAAyB,mCAAzB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACI,MAAlB;;AAFgB,kBAGQV,QAAQ,CAAC,EAAD,CAHhB;AAAA;AAAA,MAGTW,IAHS;AAAA,MAGHC,OAHG;;AAIhB,MAAIC,GAAG,GAAG,EAAV;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACZ;AACAO,IAAAA,KAAK,CAACF,UAAN,CAAiB;AAACK,MAAAA,IAAI,EAAGH,KAAK,CAACG,IAAd;AAAoBC,MAAAA,MAAM,EAAGJ,KAAK,CAACI;AAAnC,KAAjB;AACA;;;;;;;;;AAHY;AAAA;AAAA;;AAAA;AAYZ,wCAAcJ,KAAK,CAACQ,KAAN,CAAYC,QAA1B,4GAAoC;AAAA,YAA3BC,CAA2B;AAChCH,QAAAA,GAAG,CAACI,IAAJ,CACI,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAED,CAAC,CAACE,GAAjB;AAAsB,UAAA,KAAK,EAAEF,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AAhBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBf,GAjBQ,EAiBP,CAACV,KAAK,CAACG,IAAP,EAAYH,KAAK,CAACI,MAAlB,CAjBO,CAAT;AAmBA,SACI,0CACKC,IADL,CADJ;AAKH;;AAED,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BN,IAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYO;AADW,GAAL;AAAA,CAA7B;;AAIA,eAAepB,OAAO,CAACkB,eAAD,EAAiB;AAACf,EAAAA,UAAU,EAAVA;AAAD,CAAjB,CAAP,CAAsCC,GAAtC,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport NewsItem from '../components/NewsItem';\r\nimport Fetcher from './Fetcher'\r\nimport {fetchPosts} from '../components/actions/postActions'\r\n\r\nfunction Api(props) {\r\n    console.log(props.page)\r\n    console.log(props.search)\r\n    const [arrv, setArrv] = useState([])\r\n    let arr = []\r\n\r\n    useEffect(() => {\r\n        //let data = Fetcher(props.page, props.search);\r\n        props.fetchPosts({page : props.page, search : props.search});\r\n        /*data.then(function (a) {\r\n            for (let i of a.articles) {\r\n                arr.push(\r\n                    <NewsItem key={i.url} props={i} />\r\n                )\r\n            }\r\n            setArrv(arr)\r\n        })*/\r\n\r\n        for (let i of props.posts.articles) {\r\n            arr.push(\r\n                <NewsItem key={i.url} props={i} />\r\n            )\r\n        }\r\n    },[props.page,props.search])\r\n\r\n    return (\r\n        <>\r\n            {arrv}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts.items\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchPosts})(Api)"]},"metadata":{},"sourceType":"module"}