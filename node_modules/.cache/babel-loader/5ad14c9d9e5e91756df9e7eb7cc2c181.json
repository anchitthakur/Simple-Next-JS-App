{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nvar _jsxFileName = \"C:\\\\Users\\\\im\\\\Desktop\\\\main\\\\components\\\\Api.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport NewsItem from '../components/NewsItem';\nimport { fetchPosts } from '../components/actions/postActions';\n\nfunction Api(props) {\n  console.log(props); // useEffect(() => {\n  //     //if (Object.keys(props.posts).length == 0)\n  //     props.fetchPosts({ page: props.page, search: props.search })\n  // }, [props.page,props.search])\n  // let arr = [];\n\n  if (props.data.status === 'ok') {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _getIterator(props.data.articles), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var i = _step.value;\n        arr.push(React.createElement(NewsItem, {\n          key: i.url,\n          article: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, arr);\n}\n\nApi.Proptypes = {\n  //fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.object.isRequired,\n  search: Proptypes.string.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    //posts: state.posts.items,\n    page: state.page.page,\n    search: state.page.search\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(Api);","map":{"version":3,"sources":["C:\\Users\\im\\Desktop\\main\\components\\Api.js"],"names":["React","useEffect","connect","Proptypes","NewsItem","fetchPosts","Api","props","console","log","data","status","articles","i","arr","push","url","posts","object","isRequired","search","string","mapStateToProps","state","page"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADgB,CAEhB;AACA;AACA;AACA;AACA;;AAEA,MAAIA,KAAK,CAACG,IAAN,CAAWC,MAAX,KAAsB,IAA1B;AAAA;AAAA;AAAA;;AAAA;AACI,wCAAcJ,KAAK,CAACG,IAAN,CAAWE,QAAzB,4GAAmC;AAAA,YAA1BC,CAA0B;AAC/BC,QAAAA,GAAG,CAACC,IAAJ,CACI,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEF,CAAC,CAACG,GAAjB;AAAsB,UAAA,OAAO,EAAEH,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,SACI,0CACKC,GADL,CADJ;AAKH;;AAEDR,GAAG,CAACH,SAAJ,GAAgB;AACZ;AACAc,EAAAA,KAAK,EAAEd,SAAS,CAACe,MAAV,CAAiBC,UAFZ;AAGZC,EAAAA,MAAM,EAAEjB,SAAS,CAACkB,MAAV,CAAiBF;AAHb,CAAhB;;AAMA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9B;AACAC,IAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWA,IAFa;AAG9BJ,IAAAA,MAAM,EAAEG,KAAK,CAACC,IAAN,CAAWJ;AAHW,GAAL;AAAA,CAA7B;;AAMA,eAAelB,OAAO,CAACoB,eAAD,EAAkB;AAAEjB,EAAAA,UAAU,EAAVA;AAAF,CAAlB,CAAP,CAAyCC,GAAzC,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\nimport NewsItem from '../components/NewsItem';\r\nimport { fetchPosts } from '../components/actions/postActions'\r\n\r\nfunction Api(props) {\r\n    console.log(props)\r\n    // useEffect(() => {\r\n    //     //if (Object.keys(props.posts).length == 0)\r\n    //     props.fetchPosts({ page: props.page, search: props.search })\r\n    // }, [props.page,props.search])\r\n    // let arr = [];\r\n\r\n    if (props.data.status === 'ok')\r\n        for (let i of props.data.articles) {\r\n            arr.push(\r\n                <NewsItem key={i.url} article={i} />\r\n            )\r\n        }\r\n    return (\r\n        <>\r\n            {arr}\r\n        </>\r\n    )\r\n}\r\n\r\nApi.Proptypes = {\r\n    //fetchPosts: Proptypes.func.isRequired,\r\n    posts: Proptypes.object.isRequired,\r\n    search: Proptypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    //posts: state.posts.items,\r\n    page: state.page.page,\r\n    search: state.page.search\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(Api)"]},"metadata":{},"sourceType":"module"}