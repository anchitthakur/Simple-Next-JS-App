{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport { Provider } from 'react-redux';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport Api from '../components/Api';\nimport Layout from '../components/Layout';\nimport Search from '../components/Search';\nimport Pagination from '../components/Pagination';\nimport store from \"../components/store\";\n\nvar ApiPages = function ApiPages(props) {\n  return React.createElement(React.Fragment, null, React.createElement(Head, null, React.createElement(\"meta\", {\n    keywords: \"API\"\n  })), React.createElement(Layout, null, React.createElement(\"h2\", null, \"NEWS\"), React.createElement(\"br\", null), React.createElement(Search, null), React.createElement(\"br\", null), React.createElement(Pagination, null), React.createElement(Api, {\n    data: props.data\n  }), React.createElement(Pagination, null)));\n};\n\nApiPages.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var url, res, json;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = 'https://newsapi.org/v2/everything?' + 'q=' + 'tech' + '&' + 'sortBy=publishedAt&' + 'page=' + '1' + '&' + 'pageSize=5&language=en&' + 'apiKey=3b214239993247f18926b8fab6ee014f';\n          _context.next = 3;\n          return fetch(url);\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: json\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default ApiPages;","map":null,"metadata":{},"sourceType":"module"}