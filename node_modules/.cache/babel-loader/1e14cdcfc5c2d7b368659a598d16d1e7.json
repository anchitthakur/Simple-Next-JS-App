{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"C:\\\\Users\\\\im\\\\Desktop\\\\New folder\\\\components\\\\Api.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport NewsItem from '../components/NewsItem';\nimport { fetchPosts } from '../components/actions/postActions';\n\nfunction Api(props) {\n  if (useEffect(function () {\n    if (_Object$keys(props.posts).length == 0) props.fetchPosts({\n      page: props.page,\n      search: props.search\n    });\n  }, [])) ;else useEffect(function () {\n    props.fetchPosts({\n      page: props.page,\n      search: props.search\n    });\n  }, [props.page]);\n  console.log(props.page);\n  console.log(props.search);\n  var arr = [];\n  console.log(props.posts);\n\n  if (props.posts.status === 'ok') {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _getIterator(props.posts.articles), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var i = _step.value;\n        arr.push(React.createElement(NewsItem, {\n          key: i.url,\n          props: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, arr);\n}\n\nApi.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts.items,\n    page: state.page.page\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(Api);","map":{"version":3,"sources":["C:\\Users\\im\\Desktop\\New folder\\components\\Api.js"],"names":["React","useEffect","connect","Proptypes","NewsItem","fetchPosts","Api","props","posts","length","page","search","console","log","arr","status","articles","i","push","url","propTypes","func","isRequired","object","mapStateToProps","state","items"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAChB,MAAGN,SAAS,CAAC,YAAM;AACf,QAAI,aAAYM,KAAK,CAACC,KAAlB,EAAyBC,MAAzB,IAAmC,CAAvC,EACIF,KAAK,CAACF,UAAN,CAAiB;AAAEK,MAAAA,IAAI,EAAEH,KAAK,CAACG,IAAd;AAAoBC,MAAAA,MAAM,EAAEJ,KAAK,CAACI;AAAlC,KAAjB;AACP,GAHW,EAGT,EAHS,CAAZ,EAGO,CAHP,KAIKV,SAAS,CAAC,YAAM;AACjBM,IAAAA,KAAK,CAACF,UAAN,CAAiB;AAAEK,MAAAA,IAAI,EAAEH,KAAK,CAACG,IAAd;AAAoBC,MAAAA,MAAM,EAAEJ,KAAK,CAACI;AAAlC,KAAjB;AACH,GAFa,EAEX,CAACJ,KAAK,CAACG,IAAP,CAFW,CAAV;AAGJE,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACG,IAAlB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACI,MAAlB;AACA,MAAIG,GAAG,GAAG,EAAV;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACC,KAAlB;;AAEA,MAAID,KAAK,CAACC,KAAN,CAAYO,MAAZ,KAAuB,IAA3B;AAAA;AAAA;AAAA;;AAAA;AACI,wCAAcR,KAAK,CAACC,KAAN,CAAYQ,QAA1B,4GAAoC;AAAA,YAA3BC,CAA2B;AAChCH,QAAAA,GAAG,CAACI,IAAJ,CACI,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAED,CAAC,CAACE,GAAjB;AAAsB,UAAA,KAAK,EAAEF,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,SACI,0CACKH,GADL,CADJ;AAKH;;AAEDR,GAAG,CAACc,SAAJ,GAAgB;AACZf,EAAAA,UAAU,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADf;AAEZd,EAAAA,KAAK,EAAEL,SAAS,CAACoB,MAAV,CAAiBD;AAFZ,CAAhB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BjB,IAAAA,KAAK,EAAEiB,KAAK,CAACjB,KAAN,CAAYkB,KADW;AAE9BhB,IAAAA,IAAI,EAAEe,KAAK,CAACf,IAAN,CAAWA;AAFa,GAAL;AAAA,CAA7B;;AAKA,eAAeR,OAAO,CAACsB,eAAD,EAAkB;AAAEnB,EAAAA,UAAU,EAAVA;AAAF,CAAlB,CAAP,CAAyCC,GAAzC,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\nimport NewsItem from '../components/NewsItem';\r\nimport { fetchPosts } from '../components/actions/postActions'\r\n\r\nfunction Api(props) {\r\n    if(useEffect(() => {\r\n        if (Object.keys(props.posts).length == 0)\r\n            props.fetchPosts({ page: props.page, search: props.search })\r\n    }, []));\r\n    else(useEffect(() => {\r\n        props.fetchPosts({ page: props.page, search: props.search })\r\n    }, [props.page]));\r\n    console.log(props.page)\r\n    console.log(props.search)\r\n    let arr = [];\r\n    console.log(props.posts)\r\n\r\n    if (props.posts.status === 'ok')\r\n        for (let i of props.posts.articles) {\r\n            arr.push(\r\n                <NewsItem key={i.url} props={i} />\r\n            )\r\n        }\r\n    return (\r\n        <>\r\n            {arr}\r\n        </>\r\n    )\r\n}\r\n\r\nApi.propTypes = {\r\n    fetchPosts: Proptypes.func.isRequired,\r\n    posts: Proptypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts.items,\r\n    page: state.page.page\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(Api)"]},"metadata":{},"sourceType":"module"}